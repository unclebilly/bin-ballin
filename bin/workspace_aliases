#!/usr/bin/env ruby
require 'optparse'

##
# Create an alias file that allows you to CD into any workspace dir
# with a simple command. The command will always begin with the given 
# character.  
#
class WorkspaceAliases
  attr_accessor :options, :workspace_dir, :char, :alias_file, :verbose

  def initialize(argv)
    self.char       = "_"
    self.alias_file = File.join(ENV['HOME'], '.workspace_aliases')

    parser = OptionParser.new do |opts|
      opts.on("-w", "--workspace DIRECTORY", "Your workspace directory") do |dir|
        raise "#{dir} is not a directory!" unless File.directory?(dir)
        self.workspace_dir = File.expand_path(dir)
      end
      opts.on("-c", "--character CHAR", "Character to prepend to each alias. Defaults to #{char}") do |c|
        self.char = c
      end
      opts.on("-a", "--alias_file FILE", "Full path to workspace alias file.  Defaults to #{alias_file}") do |f|
        self.alias_file = f
      end
      opts.on("-v", "--verbose", "Enable verbose output") do |v|
        self.verbose = true
      end
    end

    parser.parse(argv)
    if workspace_dir.nil?
      puts "You must specifiy your workspace directory."
      puts parser
      exit 1
    end
  end

  def run
    count = 0
    File.open(self.alias_file, 'w') do |f|
      dirnames.each do |d| 
        count += 1
        alias_line = project_to_alias(d)
        f.puts alias_line
        puts alias_line if verbose
      end
    end
    puts "Wrote #{count} aliases to #{alias_file}"
  end

  def project_to_alias(dirname)
    dir_alias = self.char + File.basename(dirname).gsub(/[^a-z0-9]/i,'').downcase
    "alias #{dir_alias}='cd #{dirname}'"
  end

  def dirnames
    dirs = Dir[File.join(workspace_dir, '/*/')]
    sub_dirs = []

    dirs.each do |dir|
      moar = Dir[File.join(dir, '/*/')].find_all{|d| File.exists?(File.join(d, '/.git/')) }
      sub_dirs.concat(moar)
    end

    dirs.concat(sub_dirs)
    dirs.map{|d| File.expand_path(d)}
  end
end

if __FILE__ == $0
  WorkspaceAliases.new(ARGV).run
end